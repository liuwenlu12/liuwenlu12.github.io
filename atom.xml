<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://liuwenlu12.github.io/</id>
    <title>刘文路的博客</title>
    <updated>2020-02-26T14:31:13.902Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://liuwenlu12.github.io/"/>
    <link rel="self" href="https://liuwenlu12.github.io//atom.xml"/>
    <subtitle>与其仓皇追赶日落，不如静待漫天星辰</subtitle>
    <logo>https://liuwenlu12.github.io//images/avatar.png</logo>
    <icon>https://liuwenlu12.github.io//favicon.ico</icon>
    <rights>All rights reserved 2020, 刘文路的博客</rights>
    <entry>
        <title type="html"><![CDATA[sparkStreaming处理完数据写入redis]]></title>
        <id>https://liuwenlu12.github.io//post/sparkstreaming-chu-li-wan-shu-ju-xie-ru-redis</id>
        <link href="https://liuwenlu12.github.io//post/sparkstreaming-chu-li-wan-shu-ju-xie-ru-redis">
        </link>
        <updated>2020-02-26T14:27:36.000Z</updated>
        <content type="html"><![CDATA[<h4 id="redisutil">RedisUtil</h4>
<pre><code>package com.atguigu.day02.project.util

import redis.clients.jedis.Jedis

object RedisUtil {
  /**
   * 两种方式：
   * 1.使用连接池
   * 效率更高 连接会重用
   * 实际情况 容易出现多线程bug
   * 2.手动创建连接的客户端对象
   * 用完务必关闭
   */
  val host = &quot;lwl007&quot;
  val port = 6379
    //获取客户端对象
  def getClient = new Jedis(host, port)
    //关闭客户端
  def close(client: Jedis): Unit = {
    if (client != null) client.close()
  }
}

</code></pre>
<h4 id="数据写入">数据写入</h4>
<pre><code>  import org.json4s.JsonDSL._    //scala自带转json
    import scala.collection.JavaConversions._  //scala和java集合互转
    val key =&quot;last:hour:ads&quot;
    adsIdAndHmCountIt.foreachRDD(rdd=&gt;{
      rdd.foreachPartition((it: Iterator[(String, Iterable[(String, Int)])]) =&gt;{
        //建立连接
        val client: Jedis = RedisUtil.getClient
        //写入数据

        if(it.hasNext){
          val map: Map[String, String] = it.map {
            case (adsId, hmCountIt) =&gt; {
              (adsId, JsonMethods.compact(JsonMethods.render(hmCountIt)))
            }
          }.toMap
          client.hmset(key,map)
        }
      RedisUtil.close(client)
      })
    })
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[迭代器]]></title>
        <id>https://liuwenlu12.github.io//post/die-dai-qi</id>
        <link href="https://liuwenlu12.github.io//post/die-dai-qi">
        </link>
        <updated>2020-02-26T14:13:40.000Z</updated>
        <content type="html"><![CDATA[<h4 id="他们是一种惰性数据结构并且他们数据只能使用一次">他们是一种惰性数据结构，并且他们数据只能使用一次</h4>
<pre><code> rdd.foreachPartition((it: Iterator[(String, Iterable[(String, Int)])]) =&gt;{
        //建立连接
        val client: Jedis = RedisUtil.getClient
        //写入数据
        //Iterrator
        if(it.size&gt;0){
          println(it.toList)
        }
      })
</code></pre>
<h4 id="结果">结果</h4>
<pre><code>List()
List()
List()
List()
</code></pre>
<h4 id="迭代器独有">迭代器独有</h4>
<pre><code>  if(it.hasNext){  //it.next
          println(it.toList)
        }
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://liuwenlu12.github.io//post/hello-gridea</id>
        <link href="https://liuwenlu12.github.io//post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>